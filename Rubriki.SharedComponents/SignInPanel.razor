@using Rubriki.Authentication
@inject Model model
@inject NavigationManager navigation

<AuthorizeView>
    <Authorized>
        <div>Signed in with role of @context.GetPrimaryRole()</div>
        <button class="btn btn-primary mt-3" @onclick="SignOutClicked">Sign Out</button>
    </Authorized>
    <NotAuthorized>
        <InputText type="password" @bind-Value="model.SecretCode" class="form-control" placeholder="Secret Code" />
        <button class="btn btn-primary mt-3" @onclick="SignInClicked">Sign In</button>
        <ErrorMessage Message="@model.ErrorMessage" TopMargin="2"/>
    </NotAuthorized>
</AuthorizeView>

@code {
    private async Task SignInClicked()
    {
        var success = await model.SignIn();
        if (success)
        {
            navigation.NavigateTo("/", forceLoad: true); // reload to update authentication state
        }
    }

    private async Task SignOutClicked()
    {
        await model.SignOut();
        navigation.NavigateTo("/", forceLoad: true);
    }
}