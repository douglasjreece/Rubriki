@page "/submit-scores"
@inject Model model

<h3>Submit Scores</h3>

<AuthorizeView>
    <Authorized>
        <div>
            <label>Scores to submit:</label>
            @if (model.ScoresToSubmit is null)
            {
                <ActivityIndicator />
            }
            else
            {
                <span class="ms-2"><b>@model.ScoresToSubmit</b></span>
            }
        </div>

        <div class="mt-3">
            <button class="btn btn-primary mt-2" @onclick="ClickedEvent">Submit Scores Now</button>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="alert alert-warning">
            <p>You must be signed in to submit scores.</p>
        </div>
    </NotAuthorized>
</AuthorizeView>



<div class="mt-3">
    <Rubriki.SharedComponents.ActivityIndicator Visible="@model.IsWorking"/>
    <Rubriki.SharedComponents.SuccessMessage Message="@model.SuccessMessage"/>
    <Rubriki.SharedComponents.ErrorMessage Message="@model.ErrorMessage"/>
</div>

@code {
    protected override async Task OnInitializedAsync()
    {
        await model.Load();
    }

    private async Task ClickedEvent()
    {
        await model.Execute();
    }
}
